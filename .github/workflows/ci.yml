name: ci

on:
  push:
  pull_request:
    branches:
    - main

permissions:
  contents: read
  pages: write
  id-token: write

# Used to avoid concurrency issues
concurrency:
  group: github-pages
  cancel-in-progress: false

defaults:
  run:
    shell: bash

env:
  LANG: en_US.utf-8
  LC_ALL: en_US.utf-8
  PYTHONIOENCODING: UTF-8
  PYTHON_VERSIONS: ""

jobs:

  quality:

    runs-on: ubuntu-latest
    steps:
    - name: Checkout
      uses: actions/checkout@v4
      with:
        fetch-depth: 0
        fetch-tags: true

    - name: Setup Python
      uses: actions/setup-python@v5
      with:
        python-version: "3.12"

    - name: Setup uv
      uses: astral-sh/setup-uv@v5
      with:
        enable-cache: true
        cache-dependency-glob: pyproject.toml

    - name: Install dependencies
      run: ./scripts/make setup

    - name: Check if the documentation builds correctly
      run: ./scripts/make check-docs

    - name: Check the code quality
      run: ./scripts/make check-quality

    - name: Check if the code is correctly typed
      run: ./scripts/make check-types

    - name: Check for breaking changes in the API
      run: ./scripts/make check-api

    - name: Store objects inventory for tests
      uses: actions/upload-artifact@v4
      with:
        name: objects.inv
        path: site/objects.inv

  tests:

    needs:
    - quality
    strategy:
      matrix:
        os:
        - ubuntu-latest
        - macos-latest
        - windows-latest
        python-version:
        - "3.9"
        - "3.10"
        - "3.11"
        - "3.12"
        - "3.13"
        resolution:
        - highest
        - lowest-direct
        exclude:
        - os: macos-latest
          resolution: lowest-direct
        - os: windows-latest
          resolution: lowest-direct
    runs-on: ${{ matrix.os }}
    continue-on-error: ${{ matrix.python-version == '3.14' }}

    steps:
    - name: Checkout
      uses: actions/checkout@v4
      with:
        fetch-depth: 0
        fetch-tags: true

    - name: Setup Python
      uses: actions/setup-python@v5
      with:
        python-version: ${{ matrix.python-version }}
        allow-prereleases: true

    - name: Setup uv
      uses: astral-sh/setup-uv@v5
      with:
        enable-cache: true
        cache-dependency-glob: pyproject.toml
        cache-suffix: ${{ matrix.resolution }}

    - name: Install dependencies
      env:
        UV_RESOLUTION: ${{ matrix.resolution }}
      run: ./scripts/make setup

    - name: Download objects inventory
      uses: actions/download-artifact@v4
      with:
        name: objects.inv
        path: site/

    - name: Run the test suite
      run: ./scripts/make test
  docs:
    needs:
      - quality
    runs-on: ubuntu-latest
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }} # Retrieved from deploy-pages action
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-python@v5
        with:
          python-version: 3.x
      - run: echo "cache_id=$(date --utc '+%V')" >> $GITHUB_ENV 
      - uses: actions/cache@v4
        with:
          key: mkdocs-material-${{ env.cache_id }}
          path: .cache 
          restore-keys: |
            mkdocs-material-
      - run: pip install mkdocs-material 
      - run: pip install markdown-callouts markdown-exec mkdocs-coverage
      - run: pip install mkdocs-git-revision-date-localized-plugin
      - run: pip install mkdocs-minify-plugin mkdocs-section-index mkdocstrings
      - run: pip install "mkdocstrings[python]"
      - run: mkdocs build 
      - uses: actions/configure-pages@v5
      - uses: actions/upload-pages-artifact@v3
        with:
          path: 'site/'
      - uses: actions/deploy-pages@v4
        id: deployment